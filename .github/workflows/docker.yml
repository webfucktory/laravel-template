name: build and push Docker images

on:
  workflow_dispatch:
  push:
    tags:
      - 'v**'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: meta for Base image
        id: base_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=tag

      - name: meta for Webserver image
        id: webserver_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/webserver
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=tag

      - name: meta for App image
        id: app_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/app
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=tag

      - name: meta for Queue Worker image
        id: queue_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/queue
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=tag

      - name: meta for Schedule Runner image
        id: schedule_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/schedule
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=tag

      - name: build and push Base image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha,scope=base
          cache-to: type=gha,scope=base,mode=max
          file: .docker/build/Dockerfile
          push: true
          tags: ${{ steps.base_meta.outputs.tags }}

      - name: build and push Webserver image
        uses: docker/build-push-action@v4
        with:
          build-args: base_image_version=${{ github.ref_name }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=webserver
          cache-to: type=gha,scope=webserver,mode=max
          file: .docker/build/webserver.Dockerfile
          push: true
          tags: ${{ steps.webserver_meta.outputs.tags }}

      - name: build and push App image
        uses: docker/build-push-action@v4
        with:
          build-args: base_image_version=${{ github.ref_name }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=app
          cache-to: type=gha,scope=app,mode=max
          file: .docker/build/app.Dockerfile
          push: true
          tags: ${{ steps.app_meta.outputs.tags }}

      - name: build and push Queue Worker image
        uses: docker/build-push-action@v4
        with:
          build-args: base_image_version=${{ github.ref_name }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=queue
          cache-to: type=gha,scope=queue,mode=max
          file: .docker/build/queue.Dockerfile
          push: true
          tags: ${{ steps.queue_meta.outputs.tags }}

      - name: build and push Schedule Runner image
        uses: docker/build-push-action@v4
        with:
          build-args: base_image_version=${{ github.ref_name }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=schedule
          cache-to: type=gha,scope=schedule,mode=max
          file: .docker/build/schedule.Dockerfile
          push: true
          tags: ${{ steps.schedule_meta.outputs.tags }}
